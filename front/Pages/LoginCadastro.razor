@page "/"
@using Services;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@inject NavigationManager nav
@inject ProtectedSessionStorage storage
@inject UserService service 
@inject IJSRuntime js



    <!-- Div para o login-->
    <div class="container">   
      <div class="forms-container">
        <div class="signin-signup">
          <div class="sign-in-form formulario">
            <h2 class="title">Entrar</h2>
            @if (loginError != "")
            {
              <p>
              <label style="color: red;">@loginError</label>
              </p>
            }
            <div class="input-field">
              <i class="fas fa-user"></i>
              <input type="text" placeholder="Matricula" @bind-value = "@matricula" />
            </div>
            <div class="input-field">
              <i class="fas fa-lock"></i>
              <input type="password" placeholder="Senha" @bind-value = "@senha" />
            </div>
          <input type="submit" value="Entrar" class="btn solid" onclick ="@UsuarioLogin"/>
          <div class="social-media">
        </div>
      </div>
          <div class="sign-up-form formulario">
            <h2 class="title">Cadastrar</h2>
              <div class="input-field">
              <i class="fas fa-user"></i>
              <input type="text" placeholder="Matricula" @bind-value = "@matricula"/>
            </div>
            <div class="input-field">
              <i class="fas fa-user"></i>
              <input type="text" placeholder="Nome" @bind-value = "@nome"/>
            </div>
            <div class="input-field">
              <i class="fas fa-envelope"></i>
              <input type="email" placeholder="Email" @bind-value = "@email"/>
            </div>
            <div class="input-field">
              <i class="fas fa-lock"></i>
              <input type="password" placeholder="Senha" @bind-value = "@senha"/>
            </div>            
            <div class="input-field">
              <i class="fas fa-lock"></i>
              <input type="password" placeholder="Confirmar Senha" @bind-value = "@confsenha"/>
            </div>  
            <input type="submit" class="btn" value="Cadastrar" onclick="@CriarConta"/>
            <div class="social-media">
            </div>
          </div>
        </div>
      </div>

      <div class="panels-container">
        <div class="panel left-panel">
          <div class="content">
            <h3>Novo por aqui?</h3>
            <p>
            Cansado de ter que acessar um milhão de ambientes e pastas para realizar uma tarefa?
            </p>
            <p>
              Nossa plataforma chegou para te dar uma mãozinha agrupando tudo o que você e sua empresa precisam em um só lugar!
            </p>
            <button class="btn transparent" id="sign-up-btn">
              Cadastrar
            </button>
          </div>
          <img src="imagem/log.svg" class="image" alt="" />
        </div>
        <div class="panel right-panel">
          <div class="content">
            <h3>Já é um de nós?</h3>
            <p>
              É muito bom te ver por aqui!
            </p>
            <button class="btn transparent" id="sign-in-btn">
              Entrar
            </button>
          </div>
          <img src="imagem/register.svg" class="image" alt="" />
        </div>
      </div>
    </div>
@code
{ 
    private string loginError = "";
    private string matricula;
    private string nome;
    private string senha;
    private string confsenha;
    private string email;   
        public async void CriarConta()
        {
        await service.Register(
        this.matricula,
        this.nome, 
        this.email,
        this.senha, 
        this.confsenha);
        this.matricula = "";
        this.nome = "";
        this.email = "";
        this.senha = "";
        this.confsenha = "";
        this.StateHasChanged();    
      }
    public async void UsuarioLogin()
    {
        var result = await service.Login(
            this.matricula,
            this.senha
        );
        if (result == null)
        {
            loginError = "Matricula ou Login Incorretos.";
            StateHasChanged();
            return;
        }
        await storage.SetAsync("nome", result);
        await storage.SetAsync("token", result);
        nav.NavigateTo("/inicio");
      
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await js.InvokeVoidAsync("AnimarCadastro", null);
        }
    }

}

